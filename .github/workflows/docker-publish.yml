name: Build and Deploy API App

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - latest

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: apiapp

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=mihirmone/$IMAGE_NAME
          
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
  
  # Deploy container 
  deploy: 
    # Requires push step to finish
    needs: push
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Run SSH command
      uses: garygrossgarten/github-action-ssh@v0.5.0
      with:
        # Command to execute on the remote server.
        command: sh /datadrive/utility/pull-and-run-apiapp.sh
        # Hostname or IP address of the server.
        host: ${{ secrets.AZUREDEMO_VM }}
        # Username for authentication.
        username: ${{ secrets.AZUREDEMO_VM_USERNAME }}
        password: ${{ secrets.AZUREDEMO_VM_PASSWORD }}
  
  # Add in API Manager Catalog - Backend API
  apim:
    # Requires deploy step to complete 
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - name: HTTP Request Action
      uses: fjogeleit/http-request-action@1.3.0
      with:
        # Request URL
        url: 'http://apimdemo.centralindia.cloudapp.azure.com:19085/ApiCatalog'
        # Request Method
        method: POST
        # Content Type
        contentType: application/json
        # Request Body as JSON String
        data: '{"apiManagerHost": "${{ secrets.AZUREDEMO_VM }}","apiAdminUsername": "${{ secrets.AZUREDEMO_VM_USERNAME }}","apiAdminPassword": "${{ secrets.AZUREDEMO_VM_PASSWORD }}","organizationName": "API Development","apiName": "Backend Greet","swaggerURL": "http://apimdemo.centralindia.cloudapp.azure.com:19088/apidoc/swagger.json"}'

